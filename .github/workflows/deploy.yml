name: Deploy to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download Tailwind CSS CLI
        run: |
          mkdir -p bin
          curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64
          chmod +x tailwindcss-linux-x64
          mv tailwindcss-linux-x64 bin/tailwindcss

      - name: Build Tailwind CSS
        run: |
          ./bin/tailwindcss -i ./assets/css/style.css -o ./static/css/style.css --minify

      - name: Build Hugo site
        run: hugo --minify --gc

      - name: Deploy to VPS
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-avzr --delete -e 'ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no'"
          SOURCE: "public/"
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          TARGET: ${{ secrets.SSH_TARGET }}
          EXCLUDE: "/dist/, /node_modules/"

      - name: Post-deployment cleanup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Set proper permissions
            sudo chown -R www-data:www-data ${{ secrets.SSH_TARGET }}
            sudo find ${{ secrets.SSH_TARGET }} -type d -exec chmod 755 {} \;
            sudo find ${{ secrets.SSH_TARGET }} -type f -exec chmod 644 {} \;

            # Reload Nginx
            sudo systemctl reload nginx

            echo "Deployment completed successfully!"
