<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Development on Buana Coding</title>
    <link>http://localhost:1313/tags/web-development/</link>
    <description>Recent content in Web Development on Buana Coding</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Oct 2025 12:00:00 +0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/web-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Handle File Uploads in Go - Validation, Storage, and Security</title>
      <link>http://localhost:1313/2025/10/how-to-handle-file-uploads-in-go-validation-storage-and-security.html</link>
      <pubDate>Fri, 17 Oct 2025 12:00:00 +0700</pubDate>
      <guid>http://localhost:1313/2025/10/how-to-handle-file-uploads-in-go-validation-storage-and-security.html</guid>
      <description>&lt;p&gt;File uploads seem simple until you deploy to production. Users upload 500MB videos that crash your server. Someone uploads a PHP file disguised as an image and compromises your system. Filenames with path traversal characters like &lt;code&gt;../../etc/passwd&lt;/code&gt; expose sensitive data. What started as a basic feature becomes a security nightmare.&lt;/p&gt;&#xA;&lt;p&gt;This guide demonstrates how to handle file uploads securely in Go applications. You&amp;rsquo;ll learn to parse multipart form data correctly, validate file types using magic number detection, enforce size limits that protect server resources, sanitize filenames to prevent attacks, store files securely with proper permissions, and implement production-ready patterns that scale.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Implement Session Management in Go - Cookies and Redis Tutorial</title>
      <link>http://localhost:1313/2025/10/how-to-implement-session-management-in-go-cookies-and-redis.html</link>
      <pubDate>Thu, 16 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/2025/10/how-to-implement-session-management-in-go-cookies-and-redis.html</guid>
      <description>&lt;p&gt;Web applications need to remember users across multiple requests. When a user logs in, adds items to a shopping cart, or sets preferences, the application must maintain this state throughout their session. HTTP&amp;rsquo;s stateless nature makes this challenging, but proper session management solves this problem by storing user state securely on the server while using cookies to track users across requests.&lt;/p&gt;&#xA;&lt;p&gt;This complete guide demonstrates how to implement production-ready session management in Go using cookies and Redis. You&amp;rsquo;ll learn to create secure sessions, store data efficiently in Redis, implement session middleware, handle authentication flows, prevent common security vulnerabilities, and build scalable session systems that work across multiple server instances.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GraphQL with Golang - A Modern Alternative to REST API</title>
      <link>http://localhost:1313/2025/09/graphql-golang-modern-alternative-rest-api.html</link>
      <pubDate>Fri, 26 Sep 2025 02:00:00 +0700</pubDate>
      <guid>http://localhost:1313/2025/09/graphql-golang-modern-alternative-rest-api.html</guid>
      <description>&lt;p&gt;The landscape of API development has evolved significantly over the past decade. While REST APIs have been the dominant architecture for building web services, GraphQL has emerged as a compelling alternative that addresses many limitations of traditional REST-based approaches. When combined with Go&amp;rsquo;s performance and simplicity, GraphQL creates a powerful foundation for modern API development.&lt;/p&gt;&#xA;&lt;h2 id=&#34;understanding-graphql-beyond-traditional-rest&#34;&gt;Understanding GraphQL: Beyond Traditional REST&lt;/h2&gt;&#xA;&lt;p&gt;GraphQL represents a paradigm shift in how we think about API design and data fetching. Unlike REST, which exposes multiple endpoints for different resources, GraphQL provides a single endpoint that can handle complex queries with precise data requirements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building REST API with Gin Framework Golang - Production Ready</title>
      <link>http://localhost:1313/2025/09/building-rest-api-gin-framework-golang-production-ready.html</link>
      <pubDate>Thu, 25 Sep 2025 02:00:00 +0700</pubDate>
      <guid>http://localhost:1313/2025/09/building-rest-api-gin-framework-golang-production-ready.html</guid>
      <description>&lt;p&gt;Building a REST API might seem straightforward at first glance, but creating one that&amp;rsquo;s actually ready for production is a different beast entirely. After spending years working with various Go frameworks, I can tell you that the Gin framework hits that sweet spot between developer productivity and performance that makes it perfect for building robust APIs.&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;ve been building &lt;a href=&#34;http://localhost:1313/2025/05/how-to-build-a-rest-api-in-go-using-net-http.html&#34;&gt;&#xA;  basic REST APIs with Go&amp;rsquo;s net/http package&#xA;&lt;/a&gt;&#xA;, you&amp;rsquo;ve probably noticed how much boilerplate code you need to write for routing, middleware, and request handling. That&amp;rsquo;s where Gin shines - it provides all the essential features you need while maintaining the performance advantages that make Go special.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10 Essential VS Code Extensions Every Developer Must Have in 2025</title>
      <link>http://localhost:1313/2025/08/10-essential-vscode-extensions-developers-2025.html</link>
      <pubDate>Tue, 26 Aug 2025 10:00:00 +0700</pubDate>
      <guid>http://localhost:1313/2025/08/10-essential-vscode-extensions-developers-2025.html</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s be honest â€“ vanilla Visual Studio Code is good, but it&amp;rsquo;s not &lt;em&gt;amazing&lt;/em&gt;. What makes this popular code editor truly shine are the extensions that turn it into a powerhouse IDE. After years of coding and trying countless extensions, I&amp;rsquo;ve narrowed down the absolute essentials that every developer should have installed in 2025.&lt;/p&gt;&#xA;&lt;p&gt;Whether you&amp;rsquo;re a seasoned developer or just starting your coding journey, these extensions will save you hours of work, catch bugs before they happen, and make your coding experience so much smoother. Let&amp;rsquo;s dive into the tools that have become indispensable in modern development.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
