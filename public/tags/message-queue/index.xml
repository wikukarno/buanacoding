<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Message Queue on Buana Coding</title><link>https://www.buanacoding.com/tags/message-queue/</link><description>Recent content in Message Queue on Buana Coding</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 27 Sep 2025 03:00:00 +0700</lastBuildDate><atom:link href="https://www.buanacoding.com/tags/message-queue/index.xml" rel="self" type="application/rss+xml"/><item><title>Event-Driven Architecture with Golang and Message Queues</title><link>https://www.buanacoding.com/2025/09/event-driven-architecture-golang-message-queues.html</link><pubDate>Sat, 27 Sep 2025 03:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/event-driven-architecture-golang-message-queues.html</guid><description>&lt;p&gt;Traditional request-response architectures work well for simple applications, but as systems grow in complexity and scale, they often become bottlenecks. Event-driven architecture gives you a better way to build systems by letting components talk to each other through messages instead of direct calls. When combined with Go&amp;rsquo;s excellent concurrency model and robust ecosystem, event-driven systems become powerful tools for building scalable, resilient applications.&lt;/p&gt;
&lt;p&gt;In this guide, you&amp;rsquo;ll learn how to build event-driven systems using Go and message queues that actually work in production. We&amp;rsquo;ll explore event sourcing patterns, CQRS implementation, and practical strategies for building systems that can handle high throughput while maintaining data consistency and system reliability.&lt;/p&gt;</description></item></channel></rss>