<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AI on Buana Coding</title><link>https://www.buanacoding.com/tags/ai/</link><description>Recent content in AI on Buana Coding</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 18 Oct 2025 12:00:00 +0700</lastBuildDate><atom:link href="https://www.buanacoding.com/tags/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Build AI/LLM Applications in Go - OpenAI and Ollama Integration</title><link>https://www.buanacoding.com/2025/10/how-to-build-ai-llm-applications-in-go-openai-and-ollama-integration.html</link><pubDate>Sat, 18 Oct 2025 12:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/10/how-to-build-ai-llm-applications-in-go-openai-and-ollama-integration.html</guid><description>&lt;p&gt;AI applications are everywhere now. Chatbots answering customer questions, code assistants writing functions, content generators creating blog posts, search systems understanding natural language. If you&amp;rsquo;re building with Go, you need to know how to tap into these language models without fighting with complicated Python libraries or rewriting your entire stack.&lt;/p&gt;
&lt;p&gt;The good news: integrating AI into Go applications is straightforward once you understand the patterns. You have two main paths - cloud APIs like OpenAI for maximum quality and scale, or local models with Ollama for privacy and cost control. Sometimes you want both.&lt;/p&gt;</description></item><item><title>10 Best AI Coding Assistants Every Developer Should Try in 2025</title><link>https://www.buanacoding.com/2025/08/10-best-ai-coding-assistants-every-developer-should-try-2025.html</link><pubDate>Sun, 31 Aug 2025 15:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/08/10-best-ai-coding-assistants-every-developer-should-try-2025.html</guid><description>&lt;p&gt;The way we write code is changing dramatically. AI coding assistants have moved from experimental tools to essential companions that can genuinely transform your development workflow. I&amp;rsquo;ve been testing AI coding tools since they first emerged, and honestly, the progress in 2025 has been mind-blowing.&lt;/p&gt;
&lt;p&gt;What used to take hours of debugging, researching documentation, or writing boilerplate code can now be done in minutes. But with so many AI coding assistants flooding the market, choosing the right one feels overwhelming. That&amp;rsquo;s why I&amp;rsquo;ve spent months testing every major AI coding tool to bring you this comprehensive guide.&lt;/p&gt;</description></item><item><title>Install Ollama and Open WebUI on Ubuntu 24.04 Local AI (CPU/GPU)</title><link>https://www.buanacoding.com/2025/08/install-ollama-openwebui-ubuntu-24-04.html</link><pubDate>Tue, 19 Aug 2025 10:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/08/install-ollama-openwebui-ubuntu-24-04.html</guid><description>&lt;p&gt;If you want to run AI models locally on Ubuntu 24.04 with a clean web UI, this guide is for you. We’ll install &lt;a href="https://ollama.com" target="_blank" rel="nofollow noopener noreferrer"&gt;
 Ollama
&lt;/a&gt;
, pull a model, and use &lt;a href="https://github.com/open-webui/open-webui" target="_blank" rel="nofollow noopener noreferrer"&gt;
 Open WebUI
&lt;/a&gt;
 for a modern chat interface. The steps cover CPU‑only and NVIDIA GPU notes, optional systemd services, and practical troubleshooting.&lt;/p&gt;
&lt;p&gt;What you&amp;rsquo;ll do&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install Ollama on Ubuntu 24.04 (Noble)&lt;/li&gt;
&lt;li&gt;Pull and run a starter model (e.g., &lt;code&gt;llama3.1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run Open WebUI (Docker) and connect to Ollama&lt;/li&gt;
&lt;li&gt;Optionally enable NVIDIA GPU acceleration (CUDA)&lt;/li&gt;
&lt;li&gt;Set up systemd services and basic hardening tips&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Prerequisites&lt;/p&gt;</description></item></channel></rss>