<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Permissions on Buana Coding</title><link>https://www.buanacoding.com/tags/permissions/</link><description>Recent content in Permissions on Buana Coding</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 23 Oct 2025 09:00:00 +0700</lastBuildDate><atom:link href="https://www.buanacoding.com/tags/permissions/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Implement Role-Based Access Control (RBAC) in Laravel with Spatie Permission</title><link>https://www.buanacoding.com/2025/10/how-to-implement-rbac-laravel-spatie-permission.html</link><pubDate>Thu, 23 Oct 2025 09:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/10/how-to-implement-rbac-laravel-spatie-permission.html</guid><description>&lt;p&gt;Role-Based Access Control (RBAC) lets you manage what users can do in your application by assigning them roles and permissions. Instead of checking if a specific user can edit posts, you check if they have the editor role or the edit-posts permission. This makes access control flexible and maintainable.&lt;/p&gt;
&lt;p&gt;Laravel&amp;rsquo;s Spatie Permission package handles all the database tables, relationships, and helper methods you need for RBAC. This guide walks through installing Spatie Permission, creating roles and permissions, assigning them to users, protecting routes and controllers, using Blade directives, and testing everything.&lt;/p&gt;</description></item></channel></rss>