<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>REST API on Buana Coding</title><link>https://www.buanacoding.com/tags/rest-api/</link><description>Recent content in REST API on Buana Coding</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 24 Sep 2025 19:00:00 +0700</lastBuildDate><atom:link href="https://www.buanacoding.com/tags/rest-api/index.xml" rel="self" type="application/rss+xml"/><item><title>Building REST API with Gin Framework Golang - Production Ready</title><link>https://www.buanacoding.com/2025/09/building-rest-api-gin-framework-golang-production-ready.html</link><pubDate>Wed, 24 Sep 2025 19:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/building-rest-api-gin-framework-golang-production-ready.html</guid><description>&lt;p&gt;Building a REST API might seem straightforward at first glance, but creating one that&amp;rsquo;s actually ready for production is a different beast entirely. After spending years working with various Go frameworks, I can tell you that the Gin framework hits that sweet spot between developer productivity and performance that makes it perfect for building robust APIs.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve been building &lt;a href="https://www.buanacoding.com/2025/05/how-to-build-rest-api-in-go-using-net-http.html"&gt;
 basic REST APIs with Go&amp;rsquo;s net/http package
&lt;/a&gt;
, you&amp;rsquo;ve probably noticed how much boilerplate code you need to write for routing, middleware, and request handling. That&amp;rsquo;s where Gin shines - it provides all the essential features you need while maintaining the performance advantages that make Go special.&lt;/p&gt;</description></item><item><title>FastAPI Tutorial: Build REST API from Scratch (Beginner Guide)</title><link>https://www.buanacoding.com/2025/08/fastapi-tutorial-build-rest-api-from-scratch-beginner-guide.html</link><pubDate>Mon, 25 Aug 2025 07:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/08/fastapi-tutorial-build-rest-api-from-scratch-beginner-guide.html</guid><description>&lt;p&gt;Building APIs used to scare me when I first started programming. There&amp;rsquo;s so much to learn - databases, HTTP methods, authentication, error handling. But FastAPI changed everything for me. It&amp;rsquo;s like having training wheels that actually make you faster, not slower.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re going to build a real Book Library API from the ground up. No fluff, no complicated setups - just practical, working code that you can understand and expand on. By the end of this guide, you&amp;rsquo;ll have a fully functional REST API that can handle creating, reading, updating, and deleting books.&lt;/p&gt;</description></item></channel></rss>