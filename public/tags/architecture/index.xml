<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on Buana Coding</title><link>https://www.buanacoding.com/tags/architecture/</link><description>Recent content in Architecture on Buana Coding</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 24 Oct 2025 14:00:00 +0700</lastBuildDate><atom:link href="https://www.buanacoding.com/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Build Multi-Tenant Applications in Laravel</title><link>https://www.buanacoding.com/2025/10/how-to-build-multi-tenant-applications-laravel.html</link><pubDate>Fri, 24 Oct 2025 14:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/10/how-to-build-multi-tenant-applications-laravel.html</guid><description>&lt;p&gt;Multi-tenant applications let you serve multiple customers (tenants) with one codebase. Each tenant gets their own data, subdomain, and isolated environment, but you maintain just one application. This is how most SaaS products work - Slack, Shopify, and Basecamp all use multi-tenancy.&lt;/p&gt;
&lt;p&gt;This guide shows you how to build multi-tenant Laravel apps. You&amp;rsquo;ll learn the different tenancy models, why database-per-tenant wins for security, how to set up tenant isolation with Stancl/Tenancy package, handle subdomain routing, manage tenant databases, and scale your multi-tenant SaaS.&lt;/p&gt;</description></item><item><title>Event-Driven Architecture with Golang and Message Queues</title><link>https://www.buanacoding.com/2025/09/event-driven-architecture-golang-message-queues.html</link><pubDate>Sat, 27 Sep 2025 03:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/event-driven-architecture-golang-message-queues.html</guid><description>&lt;p&gt;Traditional request-response architectures work well for simple applications, but as systems grow in complexity and scale, they often become bottlenecks. Event-driven architecture gives you a better way to build systems by letting components talk to each other through messages instead of direct calls. When combined with Go&amp;rsquo;s excellent concurrency model and robust ecosystem, event-driven systems become powerful tools for building scalable, resilient applications.&lt;/p&gt;
&lt;p&gt;In this guide, you&amp;rsquo;ll learn how to build event-driven systems using Go and message queues that actually work in production. We&amp;rsquo;ll explore event sourcing patterns, CQRS implementation, and practical strategies for building systems that can handle high throughput while maintaining data consistency and system reliability.&lt;/p&gt;</description></item><item><title>Microservices with Golang - Architecture and Implementation Guide</title><link>https://www.buanacoding.com/2025/09/microservices-golang-architecture-implementation-guide.html</link><pubDate>Sat, 27 Sep 2025 00:01:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/microservices-golang-architecture-implementation-guide.html</guid><description>&lt;p&gt;Moving from monolithic to microservices architecture has become one of the biggest changes in how we build software today. While monolithic applications bundle all functionality into a single deployable unit, microservices break down applications into smaller, independent services that communicate over well-defined APIs. When combined with Go&amp;rsquo;s performance characteristics and deployment simplicity, microservices become a powerful approach for building scalable, maintainable systems.&lt;/p&gt;
&lt;p&gt;In this guide, you&amp;rsquo;ll learn how to design, build, and deploy microservices using Go. We&amp;rsquo;ll cover architectural patterns, service communication strategies, containerization, and production deployment techniques that will help you build robust distributed systems.&lt;/p&gt;</description></item><item><title>Breaking Monolith into Scalable Services</title><link>https://www.buanacoding.com/2025/09/laravel-microservices-breaking-monolith.html</link><pubDate>Sat, 20 Sep 2025 10:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/laravel-microservices-breaking-monolith.html</guid><description>&lt;p&gt;As your Laravel application grows, you might find yourself hitting the limitations of a monolithic architecture. Database bottlenecks, deployment challenges, and team coordination issues become increasingly common. The solution? Transitioning to a microservices architecture that breaks your monolith into smaller, manageable, and independently deployable services.&lt;/p&gt;
&lt;p&gt;This comprehensive guide will walk you through the entire process of decomposing your Laravel monolith into microservices, from initial planning to practical implementation strategies.&lt;/p&gt;
&lt;h2 id="understanding-monolith-vs-microservices"&gt;Understanding Monolith vs Microservices&lt;/h2&gt;
&lt;p&gt;A monolithic application packages all functionality into a single deployable unit. While this approach works well for small to medium applications, it presents several challenges as your application scales:&lt;/p&gt;</description></item></channel></rss>