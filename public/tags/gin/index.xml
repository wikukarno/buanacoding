<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gin on Buana Coding</title><link>https://www.buanacoding.com/tags/gin/</link><description>Recent content in Gin on Buana Coding</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 25 Sep 2025 03:00:00 +0700</lastBuildDate><atom:link href="https://www.buanacoding.com/tags/gin/index.xml" rel="self" type="application/rss+xml"/><item><title>Fiber vs Gin vs Echo - Perbandingan Framework Golang 2025</title><link>https://www.buanacoding.com/2025/09/fiber-vs-gin-vs-echo-golang-framework-comparison-2025.html</link><pubDate>Thu, 25 Sep 2025 03:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/fiber-vs-gin-vs-echo-golang-framework-comparison-2025.html</guid><description>&lt;p&gt;Choosing the right web framework can make or break your Go project. I&amp;rsquo;ve spent the last three years working with different Go frameworks across various production systems, and the three names that consistently come up in every discussion are Gin, Fiber, and Echo. Each has its passionate advocates, but which one should you actually choose in 2025?&lt;/p&gt;
&lt;p&gt;The landscape has evolved significantly since these frameworks first appeared. Performance gaps have narrowed, feature sets have matured, and the ecosystem around each has grown substantially. What used to be clear-cut decisions based on pure speed are now more nuanced choices that depend on your specific use case, team experience, and architectural requirements.&lt;/p&gt;</description></item><item><title>Building REST API with Gin Framework Golang - Production Ready</title><link>https://www.buanacoding.com/2025/09/building-rest-api-gin-framework-golang-production-ready.html</link><pubDate>Thu, 25 Sep 2025 02:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/building-rest-api-gin-framework-golang-production-ready.html</guid><description>&lt;p&gt;Building a REST API might seem straightforward at first glance, but creating one that&amp;rsquo;s actually ready for production is a different beast entirely. After spending years working with various Go frameworks, I can tell you that the Gin framework hits that sweet spot between developer productivity and performance that makes it perfect for building robust APIs.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve been building &lt;a href="https://www.buanacoding.com/2025/05/how-to-build-rest-api-in-go-using-net-http.html"&gt;
 basic REST APIs with Go&amp;rsquo;s net/http package
&lt;/a&gt;
, you&amp;rsquo;ve probably noticed how much boilerplate code you need to write for routing, middleware, and request handling. That&amp;rsquo;s where Gin shines - it provides all the essential features you need while maintaining the performance advantages that make Go special.&lt;/p&gt;</description></item></channel></rss>