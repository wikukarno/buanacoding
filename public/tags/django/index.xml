<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Django on Buana Coding</title><link>https://www.buanacoding.com/tags/django/</link><description>Recent content in Django on Buana Coding</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 29 Oct 2025 08:00:00 +0700</lastBuildDate><atom:link href="https://www.buanacoding.com/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Build a REST API with Django REST Framework (Production Ready)</title><link>https://www.buanacoding.com/2025/10/how-to-build-rest-api-django-rest-framework-production-ready.html</link><pubDate>Wed, 29 Oct 2025 08:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/10/how-to-build-rest-api-django-rest-framework-production-ready.html</guid><description>&lt;p&gt;I still remember the first time I built an API for a client&amp;rsquo;s e-commerce platform. I chose FastAPI because everyone on Twitter was hyping it up&amp;ndash;&amp;ldquo;blazing fast,&amp;rdquo; &amp;ldquo;modern Python,&amp;rdquo; &amp;ldquo;async everything.&amp;rdquo; The initial setup was smooth, and I built endpoints quickly.&lt;/p&gt;
&lt;p&gt;Then reality hit.&lt;/p&gt;
&lt;p&gt;The client needed a complex admin panel to manage products, orders, and users. They wanted role-based permissions with granular controls. They needed integration with their existing Django authentication system. And oh, they wanted detailed audit logs for every database change.&lt;/p&gt;</description></item></channel></rss>