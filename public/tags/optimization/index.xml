<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Optimization on Buana Coding</title><link>https://www.buanacoding.com/tags/optimization/</link><description>Recent content in Optimization on Buana Coding</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 06 Oct 2025 10:00:00 +0700</lastBuildDate><atom:link href="https://www.buanacoding.com/tags/optimization/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Profile and Optimize Go Applications with pprof</title><link>https://www.buanacoding.com/2025/10/how-to-profile-and-optimize-go-applications-with-pprof.html</link><pubDate>Mon, 06 Oct 2025 10:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/10/how-to-profile-and-optimize-go-applications-with-pprof.html</guid><description>&lt;script type="application/ld+json"&gt;
{
 "@context": "https://schema.org",
 "@type": "Article",
 "headline": "How to Profile and Optimize Go Applications with pprof",
 "description": "Complete guide to profiling and optimizing Go applications using pprof. Learn CPU profiling, memory profiling, goroutine analysis, and performance optimization techniques for production Go applications.",
 "author": {
 "@type": "Person",
 "name": "BuanaCoding",
 "url": "https://buanacoding.com/about/"
 },
 "publisher": {
 "@type": "Organization",
 "name": "BuanaCoding",
 "logo": {
 "@type": "ImageObject",
 "url": "https://buanacoding.com/logo.png"
 }
 },
 "datePublished": "2025-10-06",
 "dateModified": "2025-10-06",
 "mainEntityOfPage": {
 "@type": "WebPage",
 "@id": "https://buanacoding.com/2025/10/how-to-profile-and-optimize-go-applications-with-pprof.html"
 },
 "articleSection": "Programming",
 "keywords": ["go profiling", "pprof tutorial", "golang performance optimization", "cpu profiling go", "memory profiling golang"],
 "about": [
 {
 "@type": "Thing",
 "name": "Go Performance Optimization"
 },
 {
 "@type": "Thing",
 "name": "Application Profiling"
 },
 {
 "@type": "Thing",
 "name": "Backend Performance"
 }
 ]
}
&lt;/script&gt;
&lt;p&gt;Your Go application is slow. Requests take too long, memory usage keeps climbing, or CPU maxes out under load. You need answers, not guesses. That&amp;rsquo;s where pprof comes in.&lt;/p&gt;</description></item><item><title>Laravel N+1 Query Problem Solution Essential Database Optimization Guide</title><link>https://www.buanacoding.com/2025/09/laravel-n-plus-one-query-problem-solution.html</link><pubDate>Mon, 22 Sep 2025 10:00:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/laravel-n-plus-one-query-problem-solution.html</guid><description>&lt;p&gt;If you&amp;rsquo;ve ever wondered why your Laravel app suddenly becomes sluggish when displaying lists of data, you might be dealing with the dreaded N+1 query problem. It&amp;rsquo;s one of those sneaky performance killers that can turn a fast application into a slow, resource-hungry monster. Don&amp;rsquo;t worry though - once you understand what&amp;rsquo;s happening and how to fix it, you&amp;rsquo;ll never fall into this trap again.&lt;/p&gt;
&lt;h2 id="what-is-the-n1-query-problem"&gt;What is the N+1 Query Problem?&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s what happens: your app makes one query to get a list of records, then fires off a separate query for each record to grab related data. Picture this - you want to show 100 blog posts with their authors&amp;rsquo; names. Instead of being smart about it, your app runs one query to get the posts, then 100 more queries to fetch each author. That&amp;rsquo;s 101 database hits when you could&amp;rsquo;ve done it with just 2!&lt;/p&gt;</description></item><item><title>15 Essential Techniques for Fast Applications</title><link>https://www.buanacoding.com/2025/09/laravel-performance-optimization-15-techniques.html</link><pubDate>Mon, 08 Sep 2025 12:30:00 +0700</pubDate><guid>https://www.buanacoding.com/2025/09/laravel-performance-optimization-15-techniques.html</guid><description>&lt;p&gt;Performance optimization is crucial for creating successful Laravel applications that provide excellent user experiences. Slow applications frustrate users, hurt SEO rankings, and can significantly impact business revenue. This comprehensive guide covers 15 proven techniques to dramatically improve your Laravel application&amp;rsquo;s performance.&lt;/p&gt;
&lt;p&gt;Modern web users expect applications to load quickly and respond instantly to interactions. Studies show that even a one-second delay in page load time can reduce conversions by 7%. Laravel provides powerful tools and features to help you build fast applications, but knowing how to use them effectively makes all the difference.&lt;/p&gt;</description></item></channel></rss>